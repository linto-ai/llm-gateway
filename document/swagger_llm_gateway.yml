openapi: 3.0.1
info:
  version: 0.2.0
  title: Summarization API
  description: API to make summary of text using LLMs.
  contact:
    email: support@linto.ai
  license:
    name: AGPLv3
    url: https://www.gnu.org/licenses/agpl-3.0.en.html

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /services/{serviceName}/generate:
    post:
      tags:
      - Summarization API
      summary: Perform Summarization
      parameters:
        - name: serviceName
          in: path
          required: true
          description: The name of the service to use
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: file
                  format: text
                  description: File to summarize
                flavor:
                  type: string
                  default: "vigostral"
                  description: Flavor of the service
                temperature:
                  type: number
                  format: float
                  description: Override temperature defined by flavor.temperature
                top_p:
                  type: number
                  format: float
                  description: Override Top-p for defined by flavor.top_p
              required:
                - file
                - flavor
      responses:
        200:
          description: "Job successfully queued"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responsemodel'
        400:
          description: "Bad request"
        500:
          description: "Server error"
  /services:
    get:
      tags:
      - Summarization API
      summary: Get info on summarization params 
      responses:
        200:
          description: "Job successfully finished"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responsemodel'
        400:
          description: "Bad request"
        500:
          description: "Server error"
  /healthcheck:
    get:
      tags:
        - Health
      summary: Check server health
      responses:
        "200":
          description: Healthcheck passes
        "400":
          description: Healthcheck fails
        "500":
          description: Healthcheck fails
  /results/{resultId}:
    get:
      summary: Get the result of a task
      description: Returns the result of a task with the given ID.
      parameters:
        - name: resultId
          in: path
          description: ID of the task to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  summarization:
                    type: string
        '202':
          description: Task is still processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '400':
          description: Error occurred
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        
components:
  schemas:
    responsemodel:
      type: string
      
        